{"version":3,"sources":["webpack:///./src/components/card.js","webpack:///./src/components/articles.js","webpack:///./src/pages/index.js"],"names":["Card","article","to","node","slug","className","fixed","image","localFile","publicURL","imgStyle","position","id","category","name","title","data-uk-grid","author","picture","borderRadius","username","Articles","articles","leftArticlesCount","Math","ceil","length","leftArticles","slice","rightArticles","map","i","key","query","IndexPage","data","useStaticQuery","seo","strapiHomepage","allStrapiArticle","edges"],"mappings":"wKA6CeA,EAzCF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACd,OACE,kBAAC,OAAD,CAAMC,GAAE,YAAcD,EAAQE,KAAKC,KAAQC,UAAU,iBACnD,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,qBACb,kBAAC,IAAD,CACEC,MAAOL,EAAQE,KAAKI,MAAMC,UAAUC,UACpCC,SAAU,CAAEC,SAAU,aAG1B,yBAAKN,UAAU,gBACb,uBAAGO,GAAG,WAAWP,UAAU,qBACxBJ,EAAQE,KAAKU,SAASC,MAEzB,uBAAGF,GAAG,QAAQP,UAAU,iBACrBJ,EAAQE,KAAKY,OAEhB,6BACE,wBAAIV,UAAU,qBACd,yBAAKA,UAAU,6BAA6BW,eAAa,QACvD,6BACGf,EAAQE,KAAKc,OAAOC,SACnB,kBAAC,IAAD,CACEZ,MAAOL,EAAQE,KAAKc,OAAOC,QAAQV,UAAUC,UAC7CC,SAAU,CAAEC,SAAU,SAAUQ,aAAc,UAIpD,yBAAKd,UAAU,mBACb,uBAAGA,UAAU,2BACVJ,EAAQE,KAAKc,OAAOG,iBCIxBC,EAnCE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACZC,EAAoBC,KAAKC,KAAKH,EAASI,OAAS,GAChDC,EAAeL,EAASM,MAAM,EAAGL,GACjCM,EAAgBP,EAASM,MAAML,EAAmBD,EAASI,QAEjE,OACE,6BACE,yBAAKrB,UAAU,uBAAuBW,eAAa,QACjD,6BACGW,EAAaG,KAAI,SAAC7B,EAAS8B,GAC1B,OACE,kBAAC,EAAD,CACE9B,QAASA,EACT+B,IAAG,kBAAoB/B,EAAQE,KAAKC,WAK5C,6BACE,yBAAKC,UAAU,qCAAqCW,gBAAA,GACjDa,EAAcC,KAAI,SAAC7B,EAAS8B,GAC3B,OACE,kBAAC,EAAD,CACE9B,QAASA,EACT+B,IAAG,mBAAqB/B,EAAQE,KAAKC,eCNjD6B,G,UAAK,cA0CIC,UAzDG,WAChB,IAAMC,EAAOC,yBAAeH,GAE5B,OACE,kBAAC,IAAD,CAAQI,IAAKF,EAAKG,eAAeD,KAC/B,yBAAKhC,UAAU,cACb,yBAAKA,UAAU,mCACb,4BAAK8B,EAAKG,eAAevB,OACzB,kBAAC,EAAD,CAAmBO,SAAUa,EAAKI,iBAAiBC,a","file":"component---src-pages-index-js-153cfff343f0e9bf1401.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nconst Card = ({ article }) => {\n  return (\n    <Link to={`/article/${article.node.slug}`} className=\"uk-link-reset\">\n      <div className=\"uk-card uk-card-muted\">\n        <div className=\"uk-card-media-top\">\n          <Img\n            fixed={article.node.image.localFile.publicURL}\n            imgStyle={{ position: \"static\" }}\n          />\n        </div>\n        <div className=\"uk-card-body\">\n          <p id=\"category\" className=\"uk-text-uppercase\">\n            {article.node.category.name}\n          </p>\n          <p id=\"title\" className=\"uk-text-large\">\n            {article.node.title}\n          </p>\n          <div>\n            <hr className=\"uk-divider-small\" />\n            <div className=\"uk-grid-small uk-flex-left\" data-uk-grid=\"true\">\n              <div>\n                {article.node.author.picture && (\n                  <Img\n                    fixed={article.node.author.picture.localFile.publicURL}\n                    imgStyle={{ position: \"static\", borderRadius: \"50%\" }}\n                  />\n                )}\n              </div>\n              <div className=\"uk-width-expand\">\n                <p className=\"uk-margin-remove-bottom\">\n                  {article.node.author.username}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default Card;","import React from \"react\";\nimport Card from \"./card\";\n\nconst Articles = ({ articles }) => {\n  const leftArticlesCount = Math.ceil(articles.length / 5);\n  const leftArticles = articles.slice(0, leftArticlesCount);\n  const rightArticles = articles.slice(leftArticlesCount, articles.length);\n\n  return (\n    <div>\n      <div className=\"uk-child-width-1-2@s\" data-uk-grid=\"true\">\n        <div>\n          {leftArticles.map((article, i) => {\n            return (\n              <Card\n                article={article}\n                key={`article__left__${article.node.slug}`}\n              />\n            );\n          })}\n        </div>\n        <div>\n          <div className=\"uk-child-width-1-2@m uk-grid-match\" data-uk-grid>\n            {rightArticles.map((article, i) => {\n              return (\n                <Card\n                  article={article}\n                  key={`article__right__${article.node.slug}`}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Articles;","import React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport ArticlesComponent from \"../components/articles\";\nimport \"../assets/css/main.css\";\n\nconst IndexPage = () => {\n  const data = useStaticQuery(query);\n\n  return (\n    <Layout seo={data.strapiHomepage.seo}>\n      <div className=\"uk-section\">\n        <div className=\"uk-container uk-container-large\">\n          <h1>{data.strapiHomepage.title}</h1>\n          <ArticlesComponent articles={data.allStrapiArticle.edges} />\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nconst query = graphql`\n  query {\n    strapiHomepage {\n      title\n      seo {\n        metaTitle\n        metaDescription\n        shareImage {\n          localFile {\n            publicURL\n          }\n        }\n      }\n    }\n    allStrapiArticle(filter: { status: { eq: \"published\" } }) {\n      edges {\n        node {\n          strapiId\n          slug\n          title\n          category {\n            name\n          }\n          image {\n            localFile {\n              publicURL\n            }\n          }\n          author {\n            username\n            picture {\n              localFile {\n                publicURL\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;"],"sourceRoot":""}